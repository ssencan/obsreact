{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ssenc\\\\Desktop\\\\Java Ders Notlar\\u0131\\\\React\\\\obsreact\\\\src\\\\components\\\\ogretmen\\\\OgretmenKaydetComponent.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Button, Card, Form, FormCheck, FormControl } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosconfig from \"../utils/axiosconfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OgretmenKaydetComponent() {\n  _s();\n  // state olmasa da gayet normal olabilirdi\n  // bu örneği state siz yapmaya çalışabilirsiniz, mesela useref veya form kütüphaneleri\n  const [ogrName, setOgrName] = useState(\"\");\n  const [ogrIsGicik, setOgrIsGicik] = useState(false);\n  const mynavigate = useNavigate();\n  function handleSubmit(event) {\n    // form sayfayı post ettirmesin diye\n    event.preventDefault();\n    // burası görünemse de bir json veya bir class\n    // burada IOgretmen de kullanılabilir ama id 'ye ihtiyacım yok\n    const sendData = {\n      name: ogrName,\n      is_GICIK: ogrIsGicik\n    };\n    axiosconfig.post(\"ogretmen/save\", sendData).then(res => {\n      if (res.status == 200) {\n        // navlink yerine router üzerinden navigate\n        // /ogretmen linkine tıklamış gibi\n        mynavigate(\"/ogretmen\");\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"shadow\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        method: \"post\",\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"text\",\n          placeholder: \"\\u0130sim\",\n          onChange: e => {\n            setOgrName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormCheck, {\n          label: \"Is G\\u0131c\\u0131k ?\",\n          onChange: e => setOgrIsGicik(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          type: \"submit\",\n          children: \"Ekle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(OgretmenKaydetComponent, \"hEpxUB4l4Z7caicIJJpEg/qczt8=\", false, function () {\n  return [useNavigate];\n});\n_c = OgretmenKaydetComponent;\nvar _c;\n$RefreshReg$(_c, \"OgretmenKaydetComponent\");","map":{"version":3,"names":["useState","Button","Card","Form","FormCheck","FormControl","useNavigate","axiosconfig","jsxDEV","_jsxDEV","OgretmenKaydetComponent","_s","ogrName","setOgrName","ogrIsGicik","setOgrIsGicik","mynavigate","handleSubmit","event","preventDefault","sendData","name","is_GICIK","post","then","res","status","children","Body","className","method","onSubmit","e","type","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","label","checked","variant","_c","$RefreshReg$"],"sources":["C:/Users/ssenc/Desktop/Java Ders Notları/React/obsreact/src/components/ogretmen/OgretmenKaydetComponent.tsx"],"sourcesContent":["import { FormEvent, useState } from \"react\";\nimport { Button, Card, Form, FormCheck, FormControl } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosconfig from \"../utils/axiosconfig\";\n\nexport default function OgretmenKaydetComponent() {\n  // state olmasa da gayet normal olabilirdi\n  // bu örneği state siz yapmaya çalışabilirsiniz, mesela useref veya form kütüphaneleri\n  const [ogrName, setOgrName] = useState<string>(\"\");\n  const [ogrIsGicik, setOgrIsGicik] = useState<boolean>(false);\n\n  const mynavigate = useNavigate();\n\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\n    // form sayfayı post ettirmesin diye\n    event.preventDefault();\n    // burası görünemse de bir json veya bir class\n    // burada IOgretmen de kullanılabilir ama id 'ye ihtiyacım yok\n    const sendData = {\n      name: ogrName,\n      is_GICIK: ogrIsGicik,\n    };\n    axiosconfig.post(\"ogretmen/save\", sendData).then((res) => {\n      if (res.status == 200) {\n        // navlink yerine router üzerinden navigate\n        // /ogretmen linkine tıklamış gibi\n        mynavigate(\"/ogretmen\");\n      }\n    });\n  }\n\n  return (\n    <Card>\n      <Card.Body className=\"shadow\">\n        <Form method=\"post\" onSubmit={(e) => handleSubmit(e)}>\n          <FormControl\n            type=\"text\"\n            placeholder=\"İsim\"\n            onChange={(e) => {\n              setOgrName(e.target.value);\n            }}\n          ></FormControl>\n          <FormCheck\n            label=\"Is Gıcık ?\"\n            onChange={(e) => setOgrIsGicik(e.target.checked)}\n          ></FormCheck>\n          <Button variant=\"outline-primary\" type=\"submit\">\n            Ekle\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n"],"mappings":";;AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,WAAW,QAAQ,iBAAiB;AAC5E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,uBAAuBA,CAAA,EAAG;EAAAC,EAAA;EAChD;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAClD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAU,KAAK,CAAC;EAE5D,MAAMgB,UAAU,GAAGV,WAAW,CAAC,CAAC;EAEhC,SAASW,YAAYA,CAACC,KAAiC,EAAE;IACvD;IACAA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACA;IACA,MAAMC,QAAQ,GAAG;MACfC,IAAI,EAAET,OAAO;MACbU,QAAQ,EAAER;IACZ,CAAC;IACDP,WAAW,CAACgB,IAAI,CAAC,eAAe,EAAEH,QAAQ,CAAC,CAACI,IAAI,CAAEC,GAAG,IAAK;MACxD,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrB;QACA;QACAV,UAAU,CAAC,WAAW,CAAC;MACzB;IACF,CAAC,CAAC;EACJ;EAEA,oBACEP,OAAA,CAACP,IAAI;IAAAyB,QAAA,eACHlB,OAAA,CAACP,IAAI,CAAC0B,IAAI;MAACC,SAAS,EAAC,QAAQ;MAAAF,QAAA,eAC3BlB,OAAA,CAACN,IAAI;QAAC2B,MAAM,EAAC,MAAM;QAACC,QAAQ,EAAGC,CAAC,IAAKf,YAAY,CAACe,CAAC,CAAE;QAAAL,QAAA,gBACnDlB,OAAA,CAACJ,WAAW;UACV4B,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,WAAM;UAClBC,QAAQ,EAAGH,CAAC,IAAK;YACfnB,UAAU,CAACmB,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC;UAC5B;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACU,CAAC,eACfhC,OAAA,CAACL,SAAS;UACRsC,KAAK,EAAC,sBAAY;UAClBP,QAAQ,EAAGH,CAAC,IAAKjB,aAAa,CAACiB,CAAC,CAACI,MAAM,CAACO,OAAO;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACbhC,OAAA,CAACR,MAAM;UAAC2C,OAAO,EAAC,iBAAiB;UAACX,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAEhD;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAAC9B,EAAA,CAhDuBD,uBAAuB;EAAA,QAM1BJ,WAAW;AAAA;AAAAuC,EAAA,GANRnC,uBAAuB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}