{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ssenc\\\\Desktop\\\\Java Ders Notlar\\u0131\\\\React\\\\obsreact\\\\src\\\\components\\\\ogretmen\\\\OgretmenGuncelleComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosconfig from \"../utils/axiosconfig\";\nimport { Button, Card, Form, FormCheck, FormControl, Row, Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OgretmenGuncelleComponent() {\n  _s();\n  let ogrId = new URLSearchParams(window.location.search).get(\"ogrId\");\n  const [ogrName, setOgrName] = useState(\"\");\n  const [ogrIsGicik, setOgrIsGicik] = useState(false);\n  const [isloading, setisloading] = useState(true);\n  const mynavigate = useNavigate();\n  useEffect(() => {\n    axiosconfig.get(\"ogretmen/getbyid/\" + ogrId).then(response => {\n      try {\n        const ogretmen = response.data;\n        setOgrName(ogretmen.name);\n        setOgrIsGicik(ogretmen.is_GICIK);\n        setisloading(false);\n      } catch (err) {}\n    });\n  }, []);\n  function handleSubmit(event) {\n    event.preventDefault();\n    var ogretmen = {\n      id: 0,\n      name: \"\",\n      is_GICIK: false\n    };\n    ogretmen.id = parseInt(ogrId + \"\");\n    ogretmen.name = ogrName;\n    ogretmen.is_GICIK = ogrIsGicik;\n    axiosconfig.post(\"ogretmen/update\", ogretmen).then(res => {\n      if (res.status == 200) {\n        mynavigate(\"/ogretmen\");\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isloading ? /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"shadow\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          method: \"post\",\n          onSubmit: e => handleSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            placeholder: \"\\u0130sim\",\n            value: ogrName,\n            onChange: e => {\n              setOgrName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormCheck, {\n            checked: ogrIsGicik,\n            label: \"Is G\\u0131c\\u0131k ?\",\n            onChange: e => setOgrIsGicik(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-primary\",\n            type: \"submit\",\n            children: \"G\\xFCncelle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(OgretmenGuncelleComponent, \"miqwub9dAghf1/F3elE0s/TiE38=\", false, function () {\n  return [useNavigate];\n});\n_c = OgretmenGuncelleComponent;\nvar _c;\n$RefreshReg$(_c, \"OgretmenGuncelleComponent\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axiosconfig","Button","Card","Form","FormCheck","FormControl","Row","Spinner","jsxDEV","_jsxDEV","OgretmenGuncelleComponent","_s","ogrId","URLSearchParams","window","location","search","get","ogrName","setOgrName","ogrIsGicik","setOgrIsGicik","isloading","setisloading","mynavigate","then","response","ogretmen","data","name","is_GICIK","err","handleSubmit","event","preventDefault","id","parseInt","post","res","status","children","Body","className","method","onSubmit","e","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","checked","label","variant","animation","_c","$RefreshReg$"],"sources":["C:/Users/ssenc/Desktop/Java Ders Notları/React/obsreact/src/components/ogretmen/OgretmenGuncelleComponent.tsx"],"sourcesContent":["import React, { FormEvent, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosconfig from \"../utils/axiosconfig\";\nimport {\n  Button,\n  Card,\n  Form,\n  FormCheck,\n  FormControl,\n  Row,\n  Spinner,\n} from \"react-bootstrap\";\nimport { IOgretmen } from \"../model/IOgretmen\";\n\nexport default function OgretmenGuncelleComponent() {\n  let ogrId = new URLSearchParams(window.location.search).get(\"ogrId\");\n  const [ogrName, setOgrName] = useState<string>(\"\");\n  const [ogrIsGicik, setOgrIsGicik] = useState<boolean>(false);\n  const [isloading, setisloading] = useState<boolean>(true);\n\n  const mynavigate = useNavigate();\n\n  useEffect(() => {\n    axiosconfig.get(\"ogretmen/getbyid/\" + ogrId).then((response) => {\n      try {\n        const ogretmen: IOgretmen = response.data;\n        setOgrName(ogretmen.name);\n        setOgrIsGicik(ogretmen.is_GICIK);\n        setisloading(false);\n      } catch (err) {}\n    });\n  }, []);\n\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    var ogretmen: IOgretmen = { id: 0, name: \"\", is_GICIK: false };\n    ogretmen.id = parseInt(ogrId + \"\");\n    ogretmen.name = ogrName;\n    ogretmen.is_GICIK = ogrIsGicik;\n    axiosconfig.post(\"ogretmen/update\", ogretmen).then((res) => {\n      if (res.status == 200) {\n        mynavigate(\"/ogretmen\");\n      }\n    });\n  }\n\n  return (\n    <div>\n      {!isloading ? (\n        <Card>\n          <Card.Body className=\"shadow\">\n            <Form method=\"post\" onSubmit={(e) => handleSubmit(e)}>\n              <FormControl\n                type=\"text\"\n                placeholder=\"İsim\"\n                value={ogrName}\n                onChange={(e) => {\n                  setOgrName(e.target.value);\n                }}\n              ></FormControl>\n              <FormCheck\n                checked={ogrIsGicik}\n                label=\"Is Gıcık ?\"\n                onChange={(e) => setOgrIsGicik(e.target.checked)}\n              ></FormCheck>\n              <Button variant=\"outline-primary\" type=\"submit\">\n                Güncelle\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      ) : (\n        <Row className=\"justify-content-center\">\n          <Spinner animation=\"border\" variant=\"primary\"></Spinner>\n        </Row>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,SACEC,MAAM,EACNC,IAAI,EACJC,IAAI,EACJC,SAAS,EACTC,WAAW,EACXC,GAAG,EACHC,OAAO,QACF,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzB,eAAe,SAASC,yBAAyBA,CAAA,EAAG;EAAAC,EAAA;EAClD,IAAIC,KAAK,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAACC,GAAG,CAAC,OAAO,CAAC;EACpE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAS,EAAE,CAAC;EAClD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAU,KAAK,CAAC;EAC5D,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAU,IAAI,CAAC;EAEzD,MAAM0B,UAAU,GAAGzB,WAAW,CAAC,CAAC;EAEhCF,SAAS,CAAC,MAAM;IACdG,WAAW,CAACiB,GAAG,CAAC,mBAAmB,GAAGL,KAAK,CAAC,CAACa,IAAI,CAAEC,QAAQ,IAAK;MAC9D,IAAI;QACF,MAAMC,QAAmB,GAAGD,QAAQ,CAACE,IAAI;QACzCT,UAAU,CAACQ,QAAQ,CAACE,IAAI,CAAC;QACzBR,aAAa,CAACM,QAAQ,CAACG,QAAQ,CAAC;QAChCP,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOQ,GAAG,EAAE,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,YAAYA,CAACC,KAAiC,EAAE;IACvDA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIP,QAAmB,GAAG;MAAEQ,EAAE,EAAE,CAAC;MAAEN,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAM,CAAC;IAC9DH,QAAQ,CAACQ,EAAE,GAAGC,QAAQ,CAACxB,KAAK,GAAG,EAAE,CAAC;IAClCe,QAAQ,CAACE,IAAI,GAAGX,OAAO;IACvBS,QAAQ,CAACG,QAAQ,GAAGV,UAAU;IAC9BpB,WAAW,CAACqC,IAAI,CAAC,iBAAiB,EAAEV,QAAQ,CAAC,CAACF,IAAI,CAAEa,GAAG,IAAK;MAC1D,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrBf,UAAU,CAAC,WAAW,CAAC;MACzB;IACF,CAAC,CAAC;EACJ;EAEA,oBACEf,OAAA;IAAA+B,QAAA,EACG,CAAClB,SAAS,gBACTb,OAAA,CAACP,IAAI;MAAAsC,QAAA,eACH/B,OAAA,CAACP,IAAI,CAACuC,IAAI;QAACC,SAAS,EAAC,QAAQ;QAAAF,QAAA,eAC3B/B,OAAA,CAACN,IAAI;UAACwC,MAAM,EAAC,MAAM;UAACC,QAAQ,EAAGC,CAAC,IAAKb,YAAY,CAACa,CAAC,CAAE;UAAAL,QAAA,gBACnD/B,OAAA,CAACJ,WAAW;YACVyC,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,WAAM;YAClBC,KAAK,EAAE9B,OAAQ;YACf+B,QAAQ,EAAGJ,CAAC,IAAK;cACf1B,UAAU,CAAC0B,CAAC,CAACK,MAAM,CAACF,KAAK,CAAC;YAC5B;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACU,CAAC,eACf7C,OAAA,CAACL,SAAS;YACRmD,OAAO,EAAEnC,UAAW;YACpBoC,KAAK,EAAC,sBAAY;YAClBP,QAAQ,EAAGJ,CAAC,IAAKxB,aAAa,CAACwB,CAAC,CAACK,MAAM,CAACK,OAAO;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eACb7C,OAAA,CAACR,MAAM;YAACwD,OAAO,EAAC,iBAAiB;YAACX,IAAI,EAAC,QAAQ;YAAAN,QAAA,EAAC;UAEhD;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,gBAEP7C,OAAA,CAACH,GAAG;MAACoC,SAAS,EAAC,wBAAwB;MAAAF,QAAA,eACrC/B,OAAA,CAACF,OAAO;QAACmD,SAAS,EAAC,QAAQ;QAACD,OAAO,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3C,EAAA,CAhEuBD,yBAAyB;EAAA,QAM5BX,WAAW;AAAA;AAAA4D,EAAA,GANRjD,yBAAyB;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}